openapi: 3.0.3
info:
  title: User Interaction BFF API
  version: 1.2.0
  description:
    Full-featured BFF API for user authentication, profile, sessions, credentials,
    and security.
servers:
  - url: https://api.com/bff
security:
  - bearerAuth: []
tags:
  - name: Auth
    description: Authentication and session-related endpoints
  - name: User
    description: User registration and profile
  - name: Security
    description: MFA, password resets, and other security settings
  - name: Session
    description: Session management and lifecycle
  - name: Audit
    description: User activity logging
paths:
  /auth/login:
    post:
      tags:
        - Auth
      summary: User login
      operationId: loginUser
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginRequest"
      responses:
        "200":
          description: Login successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoginResponse"
        "400":
          description: Invalid credentials
  /auth/logout:
    post:
      tags:
        - Auth
      summary: User logout
      operationId: logoutUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LogoutRequest"
      responses:
        "200":
          description: Logout successful
        "401":
          description: Unauthorized
  /user/register:
    post:
      tags:
        - User
      summary: Register new user
      operationId: registerUser
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegisterUserRequest"
      responses:
        "201":
          description: User registered
        "400":
          description: Invalid input
  /security/mfa/setup:
    post:
      tags:
        - Security
      summary: Start MFA enrollment
      operationId: startMfaEnrollment
      responses:
        "200":
          description: MFA enrollment initiated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MfaEnrollmentResponse"
        "401":
          description: Unauthorized
  /security/mfa/verify:
    post:
      tags:
        - Security
      summary: Verify MFA code
      operationId: verifyMfaCode
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VerifyMfaCodeRequest"
      responses:
        "200":
          description: MFA setup confirmed
        "400":
          description: Invalid code
        "401":
          description: Unauthorized
  /security/password-reset/request:
    post:
      tags:
        - Security
      summary: Request password reset
      operationId: requestPasswordReset
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PasswordResetRequest"
      responses:
        "200":
          description: Reset link sent
        "400":
          description: Invalid email
  /security/password-reset/confirm:
    post:
      tags:
        - Security
      summary: Confirm password reset
      operationId: confirmPasswordReset
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PasswordResetConfirmRequest"
      responses:
        "200":
          description: Password updated
        "400":
          description: Invalid token or password
  /session/revoke:
    post:
      tags:
        - Session
      summary: Revoke session
      operationId: revokeSession
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RevokeSessionRequest"
      responses:
        "200":
          description: Session revoked
        "401":
          description: Unauthorized
  /audit/log:
    get:
      tags:
        - Audit
      summary: Get user activity log
      operationId: getAuditLog
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Audit log
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AuditLogItem"
        "401":
          description: Unauthorized
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    LoginRequest:
      type: object
      required:
        - username
        - password
      properties:
        username:
          type: string
        password:
          type: string
    LoginResponse:
      type: object
      properties:
        session_id:
          type: string
    LogoutRequest:
      type: object
      required:
        - session_id
      properties:
        session_id:
          type: string
    RegisterUserRequest:
      type: object
      required:
        - username
        - password
        - email
      properties:
        username:
          type: string
        password:
          type: string
        email:
          type: string
    MfaEnrollmentResponse:
      type: object
      properties:
        qr_code_url:
          type: string
        secret:
          type: string
    VerifyMfaCodeRequest:
      type: object
      required:
        - code
      properties:
        code:
          type: string
    PasswordResetRequest:
      type: object
      required:
        - email
      properties:
        email:
          type: string
    PasswordResetConfirmRequest:
      type: object
      required:
        - token
        - new_password
      properties:
        token:
          type: string
        new_password:
          type: string
    RevokeSessionRequest:
      type: object
      required:
        - session_id
      properties:
        session_id:
          type: string
    AuditLogItem:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
        action:
          type: string
        ip_address:
          type: string
